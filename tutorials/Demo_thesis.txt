ex_11 = sdrsfullal07_to4 
EmbedBoxes ex_11

EmbedGraph ex_11
iOutscopesMap ex_11
iOutscopesFrom 7 ex_11
iOutscopesFrom 0 ex_11
outscopesFrom 0 ex_11
outscopesFrom 3 ex_11

:t sdrs_because
:t sdrs_because drs1
:t sdrs_because drs1 drs2
EmbedBoxes $ sdrs_because drs1 drs2

----

John had dinner with Maria. He made pasta. Then somebody rang the bell.

let d1 = DRS [DRSRef "x", DRSRef "y"] [Rel (DRSRel "John") [DRSRef "x"], Rel (DRSRel "Maria") [DRSRef "y"], Rel (DRSRel "invite") [DRSRef "x", DRSRef "y"]]
d1
let s1 = renameDisVars (drsToSDRS d1) [(0,1)]
s1
let d2 = DRS [DRSRef "x1"] [Rel (DRSRel "=") [DRSRef "x1", DRSRef "x"], Rel (DRSRel "make_pasta") [DRSRef "x"]]
d2
let s2 = addDRS s1 d2 [(1, relationFromRelName "Elaboration")]
s2
rf s2
let d3 = DRS [DRSRef "x"] [Rel (DRSRel "person") [DRSRef "x"], Rel (DRSRel "ring_bell") [DRSRef "x"]]
d3
let s3 = addDRS s2 d3 [(1, relationFromRelName "Narration")]
s3
rf s3
accessibleDRSs s3 3
sdrsBoundRef (DRSRef "x") 1 s3
sdrsFreeRefs s3
sdrsProperDRSs s3
sdrsPureDRSs s3
sdrsUniqueDRSRefs s3
let s3b = sdrsAlphaConvertDRS s3 3 [(DRSRef "x1",DRSRef "x2")]
s3b
sdrsUniqueDRSRefs s3b
---
let sm1 = drsToSDRS d1
sm1
let sm1a = drsToSDRS d2
sm1a
let d2alt = DRS [] [Rel (DRSRel "heat_up_pizza") [DRSRef "x"]]
d2alt
let sm1b = addDRS sm1a d2alt [(0, relationFromRelName "Alternation")]
sm1b
let sm2 = addSDRS sm1 sm1b [(0, relationFromRelName "Elaboration")]
sm2


---
coll slides:

let s1 = drsToSDRS _al07_1
let s2 = addDRS s1 _al07_2 [(0, relationFromRelName "Elaboration")]
let s3 = addDRS s2 _al07_5 [(1, relationFromRelName "Narration")]
let exampleDRS2 = DRS [] [Imp (DRS [DRSRef "x",DRSRef "y"] [Rel (DRSRel "John") [DRSRef "x"],Rel (DRSRel "Maria") [DRSRef "y"],Rel (DRSRel "invite") [DRSRef "x",DRSRef "y"]]) (DRS [] [Rel (DRSRel "make_pasta") [DRSRef "x"]])]
