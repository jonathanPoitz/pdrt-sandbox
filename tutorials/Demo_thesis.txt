

ex_11 = sdrsfullal07_to4 
EmbedBoxes ex_11

EmbedGraph ex_11
iOutscopesMap ex_11
iOutscopesFrom 7 ex_11
iOutscopesFrom 0 ex_11
outscopesFrom 0 ex_11
outscopesFrom 3 ex_11

  :t sdrs_because
  :t sdrs_because drs1
  :t sdrs_because drs1 drs2
  sdrs_because drs1 drs2

----

John had dinner with Maria. He made pasta. Then somebody rang the bell.

=== thesis demo ===
-- * Building up an SDRS using addDRS
-- "John has dinner. He eats fish. Then somebody rings the bell."
let d1 = DRS [DRSRef "x"] [Rel (DRSRel "John") [DRSRef "x"], Rel (DRSRel "have_dinner") [DRSRef "x"]]
d1
let s1 = drsToSDRS d1
s1
let d2 = DRS [] [Rel (DRSRel "eat_fish") [DRSRef "x"]]
d2
let s2 = addDRS s1 d2 [(0, relationFromRelName "Elaboration")]
s2
rf s2
let d3 = DRS [DRSRef "x"] [Rel (DRSRel "person") [DRSRef "x"], Rel (DRSRel "ring_bell") [DRSRef "x"]]
d3
let s3 = addDRS s2 d3 [(0, relationFromRelName "Narration")]
s3
rf s3
-- ^ In this discourse structure 0 and 1 are not available for attachment anymore
accessibleDRSs s3 3
-- ^ And DRS1 is not accessible from 3 due to it being embedded underneath the left side of a coordinating relation
sdrsBoundRef (DRSRef "x") 1 s3

-- * Checking the conditions of felicity in the SDRS
sdrsFreeRefs s3
sdrsProperDRSs s3
sdrsPureDRSs s3
sdrsUniqueDRSRefs s3
-- ^ Although not having an effect on the truth conditions, the fact that x1 is used twice can worsen the readability of the SDRS
let s3b = sdrsAlphaConvertDRS s3 3 [(DRSRef "x1",DRSRef "x2")]
-- ^ Manual alpha-conversion can correct this
s3b
sdrsUniqueDRSRefs s3b

-- * Building up an SDRS using addDRS and addSDRS
-- "John has dinner. He eats fish. The next day he either feels good or is sick"
let sm1 = s2
sm1
let d2' = DRS [] [Rel (DRSRel "feel_good") [DRSRef "x"]]
d2'
let sm2 = drsToSDRS d2'
let d3' = DRS [] [Rel (DRSRel "sick") [DRSRef "x"]]
let sm3 = addDRS sm2 d3' [(0, relationFromRelName "Alternation")]
sm3
let sm4 = addSDRS sm1 sm3 [(1, relationFromRelName "Result")]
sm4
let d3'' = DRS [DRSRef "x"] [Rel (DRSRel "John") [DRSRef "x"],Rel (DRSRel "sick") [DRSRef "x"]]
let d2 = DRS [] [Rel (DRSRel "eat_fish") [DRSRef "x"]]
let d4 = DRS [] [Rel (DRSRel "eat_pasta") [DRSRef "x"]]
let sn1 = drsToSDRS d3''
let sn2 = addDRS sn1 d4 [(0,relationFromRelName "Explanation")]
let sn3 = addDRS sn2 d2 [(0,relationFromRelName "Explanation")]
let sn4 = negateRelation sn3 (relationFromRelName "Explanation") 0 1

=== end ===


---
coll slides:

let s1 = drsToSDRS _al07_1
let s2 = addDRS s1 _al07_2 [(0, relationFromRelName "Elaboration")]
let s3 = addDRS s2 _al07_5 [(1, relationFromRelName "Narration")]
let exampleDRS2 = DRS [] [Imp (DRS [DRSRef "x",DRSRef "y"] [Rel (DRSRel "John") [DRSRef "x"],Rel (DRSRel "Maria") [DRSRef "y"],Rel (DRSRel "invite") [DRSRef "x",DRSRef "y"]]) (DRS [] [Rel (DRSRel "make_pasta") [DRSRef "x"]])]

---

let because p q = SDRS (M.fromList [(0, CDU $ Relation (relationFromRelName "Explanation") 1 2),(1, EDU p),(2, EDU q)]) 2

let binary_sdrs' = addDRS . drsToSDRS
let binary_sdrs edges arg1 arg2 = binary_sdrs' arg1 arg2 edges
let because' = binary_sdrs [(0, relationFromRelName "explanation")]

let manishappy = DRS [DRSRef "x"] [Rel (DRSRel "man") [DRSRef "x"],Rel (DRSRel "happy") [DRSRef "x"]]
let womanishappy = DRS [DRSRef "x"] [Rel (DRSRel "woman") [DRSRef "x"],Rel (DRSRel "happy") [DRSRef "x"]]

let sdrs1 = because manishappy womanishappy
sdrs1
sdrsPureDRSs sdrs1

let sdrs2 = because' manishappy womanishappy
sdrs2
sdrsPureDRSs sdrs2


----

┌--------------------------------------------┐
| 0                                          |
├--------------------------------------------┤
|    ┌-------------------------------------┐ |
|    | 1  2  3                             | |
|    ├-------------------------------------┤ |
|    | 1: K1                               | |
| 0: | 2: K2                               | |
|    | *3*: K3                             | |
|    | elaboration(1,2) ∧ elaboration(2,3) | |
|    └-------------------------------------┘ |
└--------------------------------------------┘

┌--------------------------------------------┐
| 0                                          |
├--------------------------------------------┤
|    ┌-------------------------------------┐ |
|    | 1  2  3                             | |
|    ├-------------------------------------┤ |
|    | 1: K1                               | |
| 0: | 2: K2                               | |
|    | *3*: K3                             | |
|    | elaboration(1,2) ∧ result(2,3)      | |
|    └-------------------------------------┘ |
└--------------------------------------------┘

┌------------------------------┐
| 0                            |
├------------------------------┤
|    ┌-----------------------┐ |
|    | 1  4                  | |
|    ├-----------------------┤ |
|    | 1: K1                 | |
|    |    ┌----------------┐ | |
|    |    | 2  3           | | |
| 0: |    ├----------------┤ | |
|    | 4: | 2: K2          | | |
|    |    | *3*: K3        | | |
|    |    | narration(2,3) | | |
|    |    └----------------┘ | |
|    | elaboration(1,4)      | |
|    └-----------------------┘ |
└------------------------------┘

┌-------------------------┐
| 0                       |
├-------------------------┤
|    ┌------------------┐ |
|    | 1  2             | |
|    ├------------------┤ |
| 0: | 1: K1            | |
|    | *2*: K2          | |
|    | elaboration(1,2) | |
|    └------------------┘ |
└-------------------------┘

┌-----------------------------┐
| 4                           |
├-----------------------------┤
|    ┌----------------------┐ |
|    | 0  3                 | |
|    ├----------------------┤ |
|    |    ┌---------------┐ | |
|    |    | 1  2          | | |
|    |    ├---------------┤ | |
| 4: | 0: | 1: K1         | | |
|    |    | 2: K2         | | |
|    |    | parallel(1,2) | | |
|    |    └---------------┘ | |
|    | *3*: K3              | |
|    | explanation(0,3)     | |
|    └----------------------┘ |
└-----------------------------┘

┌----------------------┐
| 0                    |
├----------------------┤
|    ┌---------------┐ |
|    | 1  2          | |
|    ├---------------┤ |
| 0: | 1: K1         | |
|    | *2*: K2       | |
|    | parallel(1,2) | |
|    └---------------┘ |
└----------------------┘

*Main> Underspec ex13
┌--------------------------------------------┐
| 0                                          |
├--------------------------------------------┤
|    ┌-------------------------------------┐ |
|    | 1  2  7                             | |
|    ├-------------------------------------┤ |
|    | 1: K1                               | |
|    | 2: K2                               | |
|    |    ┌----------------┐               | |
|    |    | 3  4           |               | |
| 0: |    ├----------------┤               | |
|    | 7: | 3: K3          |               | |
|    |    | *4*: K4        |               | |
|    |    | narration(3,4) |               | |
|    |    └----------------┘               | |
|    | elaboration(1,2) ∧ elaboration(2,7) | |
|    └-------------------------------------┘ |
└--------------------------------------------┘

*Main> LinearDRSs ex11
┌--------------------------------------------------------┐
| 0                                                      |
├--------------------------------------------------------┤
|    ┌-------------------------------------------------┐ |
|    | 1  2  7                                         | |
|    ├-------------------------------------------------┤ |
|    | 1: [x,y: John(x),evening(y),great(y),have(x,y)] | |
|    |                                                 | |
|    | 2: [z: meal(z),great(z),have(x,z)]              | |
|    |                                                 | |
|    |    ┌---------------------------------┐          | |
|    |    | 3  4                            |          | |
| 0: |    ├---------------------------------┤          | |
|    |    | 3: [r: salmon(r),eat(x,r)]      |          | |
|    | 7: |                                 |          | |
|    |    | *4*: [s: cheese(s),devour(x,s)] |          | |
|    |    |                                 |          | |
|    |    | narration(3,4)                  |          | |
|    |    └---------------------------------┘          | |
|    | elaboration(1,2) ∧ elaboration(2,7)             | |
|    └-------------------------------------------------┘ |
└--------------------------------------------------------┘

*Main> let ex_11 = sdrsfullal07_to4 
*Main> Underspec ex_11

┌--------------------------------------------┐
| 0                                          |
├--------------------------------------------┤
|    ┌-------------------------------------┐ |
|    | 1  2  7                             | |
|    ├-------------------------------------┤ |
|    | 1: K1                               | |
|    | 2: K2                               | |
|    |    ┌----------------┐               | |
|    |    | 3  4           |               | |
| 0: |    ├----------------┤               | |
|    | 7: | 3: K3          |               | |
|    |    | *4*: K4        |               | |
|    |    | narration(3,4) |               | |
|    |    └----------------┘               | |
|    | elaboration(1,2) ∧ elaboration(2,7) | |
|    └-------------------------------------┘ |
└--------------------------------------------┘

*Main> iOutscopesMap ex_11
[(0,[1,2,7]),(7,[3,4])]
*Main> iOutscopesFrom 7 ex_11
Just 0
*Main> iOutscopesFrom 0 ex_11
Nothing
*Main> outscopesFrom 0 ex_11
[]
*Main> outscopesFrom 3 ex_11
[7,0]

*Main> Linear ex27 
┌--------------------------------┐
| 6                              |
├--------------------------------┤
|    ┌-------------------------┐ |
|    | 4  5                    | |
|    ├-------------------------┤ |
|    |    ┌------------------┐ | |
|    |    | 0  1             | | |
|    |    ├------------------┤ | |
|    | 4: | 0: [s: ]         | | |
|    |    | 1: [: ]          | | |
|    |    | consequence(0,1) | | |
| 6: |    └------------------┘ | |
|    |    ┌------------------┐ | |
|    |    | 2  3             | | |
|    |    ├------------------┤ | |
|    | 5: | 2: [: ]          | | |
|    |    | *3*: [: ]        | | |
|    |    | consequence(2,3) | | |
|    |    └------------------┘ | |
|    | contrast(4,5)           | |
|    └-------------------------┘ |
└--------------------------------┘
*Main> sdrsBoundRef (DRSRef "s") 2 sdrsExtAcc
False
*Main> sdrsBoundRef (DRSRef "s") 3 sdrsExtAcc
False
*Main> sdrsBoundRef (DRSRef "s") 1 sdrsExtAcc
True

